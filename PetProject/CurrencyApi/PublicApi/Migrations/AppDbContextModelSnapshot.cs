// <auto-generated />
using System;
using Fuse8_ByteMinds.SummerSchool.PublicApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fuse8_ByteMinds.SummerSchool.PublicApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("user")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fuse8_ByteMinds.SummerSchool.PublicApi.Models.CurrencyApiSetting", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<int?>("CurrencyRoundCount")
                        .HasMaxLength(27)
                        .HasColumnType("integer")
                        .HasColumnName("currency_round_count");

                    b.Property<string>("DefaultCurrency")
                        .HasColumnType("text")
                        .HasColumnName("default_currency");

                    b.HasKey("Id")
                        .HasName("pk_currency_api_settings");

                    b.HasIndex("DefaultCurrency", "CurrencyRoundCount")
                        .HasDatabaseName("ix_currency_api_settings_default_currency_currency_round_count");

                    b.ToTable("currency_api_settings", "user", t =>
                        {
                            t.HasCheckConstraint("CK_currency_api_settings_default_currency_RegularExpression", "default_currency ~ '[A-Z]{3}'");
                        });
                });

            modelBuilder.Entity("Fuse8_ByteMinds.SummerSchool.PublicApi.Models.FavouriteCurrency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("base_currency");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_favourite_currencies");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_favourite_currencies_name");

                    b.HasIndex("BaseCurrency", "Currency")
                        .IsUnique()
                        .HasDatabaseName("ix_favourite_currencies_base_currency_currency");

                    b.ToTable("favourite_currencies", "user", t =>
                        {
                            t.HasCheckConstraint("CK_favourite_currencies_base_currency_RegularExpression", "base_currency ~ '[A-Z]{3}'");

                            t.HasCheckConstraint("CK_favourite_currencies_currency_RegularExpression", "currency ~ '[A-Z]{3}'");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
